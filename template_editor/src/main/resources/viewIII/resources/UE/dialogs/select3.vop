<!DOCTYPE html>
<html>

<head>
    <title>下拉框</title>
    <#include '/common/head.vop' />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <link rel="stylesheet" type="text/css" href="bootstrap/select-1.12.4/css/bootstrap-select.min.css">
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <!--[if lte IE 6]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap-ie6.css">
    <![endif]-->
    <!--[if lte IE 7]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/ie.css">
    <![endif]-->

    <script src="core.js?dd=132"></script>
    <script src="jscolor-2.0.4/jscolor.min.js"></script>

    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="bootstrap/select-1.12.4/js/bootstrap-select.js"></script>
    <script type="text/javascript" src="${ctx}/viewIII/resources/UE/sde_func.js"></script>
</head>

<body>
    <div class="content">
        <table class="table table-bordered table-striped table-hover">
            <input type="hidden" id="VER_ID" name="VER_ID"  />
            <input type="hidden" id="PLUGINID" name="PLUGINID" />
            <tr>
                <th><span>控件编码 </span><span style="color: red;" id="txtMsg">*</span></th>
                <th><span>控件名称 </span><span style="color: red;">*</span></th>
            </tr>
            <tr>
                <td><input type="text" id="txtCODE" placeholder="必填项"></td>
                <td><input type="text" id="txtNAME" onblur="$G('txtDESCNAME').value = $G('txtNAME').value" placeholder="必填项"></td>
            </tr>
            <tr>
                <th><span>标签</span> </th>
                <th><span>描述名</span> </th>
            </tr>
            <tr>
                <td><input type="text" id="txtTAG" placeholder="标签,多个用逗号隔开"></td>
                <td><input type="text" id="txtDESCNAME" placeholder="描述名"></td>
            </tr>
            <tr>
                <th><span>选填属性</span> </th>
                <th><span>默认值</span> </th>
            </tr>
            <tr>
            	<td>
		            <select id="txtVERIFYTYPE">
			            <option value="select" selected="selected">单选框</option>
			            <option value="checkbox">多选框</option>
		            </select>
		        </td>
                <td>
                    <div class="input-append">
                        <input type="text" id="txtDEFAULTVALUE" readonly="readonly" placeholder="默认值"><a title="删除" class="btn" href="#" onclick="deleteDefaultOption()"><i class="icon-trash"></i></a>
                    </div>
                </td>
            </tr>
            <tr>
                <th><span>字体颜色</span></th>
                <th><span>选填属性</span></th>
            </tr>
            <tr>
                <td><input type="text" id="txtCOLOR" class="jscolor" placeholder="颜色" value="000000"></td>
                <td>
                    <input id="txtREQUIRED" type="checkbox" /> 必填&nbsp;&nbsp;
                    <input id="txtFREEINPUT" type="checkbox" /> 补充&nbsp;&nbsp;
                    <input id="txtISDISPLAY" type="checkbox" /> 隐藏&nbsp;&nbsp;
                    <input id="ISBRACKETS" type="checkbox" /> 括号&nbsp;&nbsp;</br>
                    <input id="OPENRULE" type="checkbox"/> 规则&nbsp;&nbsp;
                    <input id="ISREDPOINT" type="checkbox" /> 红点&nbsp;&nbsp;
                    <input id="DESCRIB" type="checkbox"/> 左侧&nbsp;&nbsp;
                </td>
            </tr>
            <tr class='describ' style="display:none">
                <th><span>左侧描述</span></th>
                <th><span> </span></th>
            </tr>
            <tr class='describ' style="display:none;">
                <td>
                    <input type="text" id="labelVALUE" placeholder="控件左侧的文字描述">
                </td>
                <td>
                </td>
            </tr>
            <tr class='openRule' style="display:none;">
                <th><span>规则取数</span></th>
                <th><span> </span></th>
            </tr>
            <tr class='openRule' style="display:none;">
                <td  align="center" style="width: 600px;" colspan ="2">
                    <div id="templateDialogDiv" ></div>
                    <div id="inputTemplateDialog" ></div>
                    <input type="hidden" id="resParamCode" >
                    <input type="hidden" id="resParamTXT" >
                    <input type="hidden" id="selectedValue" >
                    <input type="hidden" id="selectRuleFindParam" ><!--规则查询条件-->

                    <span>&nbsp;规则取数：</span>
                    <select id="txtRuleList" style="width: 220px;"><!-- <option value="" selected="selected">-请选择规则-</option>--></select>
                    <!--<span>&nbsp;关联结果字段：</span>-->
                    <select id="selectRuleResParam" style="width: 220px;"></select><br/><!--规则字段条件-->
                    <!--<span>&nbsp;关联模板：</span>-->
                    <span>&nbsp;选择控件：</span>
                    <!--下拉表格 20180306 king-->
                    <div id="toolbar" >
                        模板名称： <input style="margin-top:5px;" id='tp_name1' class='text'>
                        <a href="javascript:void(0);" id="searchCondition" style="margin-top:2px;" class="widget-linkbutton" onclick="queryBindById('#tp_name1')">查询</a>
                    </div>
                    <input id='selectTemplate' style="width: 220px;" class="widget-combogrid" data-options="
                            panelWidth:435,
                            panelHeight:380,
                            multiple:false,
                            pagination:true,
                            textField:'name',
                            valueField:'template_ver_id',
                            toolbar:'#toolbar',
                            frozenColumns:[[{
                                field:'ck',
                                checkbox : true
                            }]],
                            onSelect: function () {              //选中处理
                                    var template_ver_id = combogrid.getValue();
                                    if(!template_ver_id){return;}
                                    console.log('template_ver_id:'+template_ver_id);
                                    selectCode(template_ver_id);
                            },
                            columns:[[
                                {field:'template_ver_id',title:'版本号',width:45,align:'center'},
                                {field:'name',title:'模板名称',width:200},
                                {field:'create_time',title:'创建时间',width:97,align:'center'},
                                {field:'status',title:'状态',width:50,align:'center'}
                            ]]" />
                    <input type="text" id="inputTemplate" style="display:none; width: 206px; margin-top: 10px" readonly="readonly"></input>
                    <!-- <span>&nbsp;关联控件：</span>-->
                    <select id="selectCode" class="selectpicker"  multiple data-actions-box="true"  data-live-search="true" ></select>
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="tabbable">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab1" onclick="$G('txtREMOTEURL').value = '';" data-toggle="tab">固定选项</a></li>
                            <li><a href="#tab2" data-toggle="tab">动态数据</a></li>
                        </ul>
                        <div>
                            <div class="tab-pane active" id="tab1">
                                <select id="txtBINDINGDATA" style="width:100%;height: 150px;" multiple="multiple" class="span14"></select>
                                <div class="input-prepend">
                                    <div class="input-append" style="margin-right:10px;">
                                        <button class="btn disabled" type="button">值</button>
                                        <input type="text" id="txtInputValue" onchange="(($G('txtInputDesc').value=='')?$G('txtInputDesc').value = $G('txtInputValue').value:'')" class="span2" placeholder="值" style="width:125px;border-radius:0 4px 4px 0;" />
                                    </div>
                                    <div class="input-append" style="margin-right:10px;">
                                        <button class="btn disabled" type="button">描述</button>
                                        <input type="text" id="txtInputDesc" class="span2" placeholder="描述" style="width:125px;border-radius:0 4px 4px 0;" />
                                    </div>
                                    <div class="btn-group pull-right">
                                        <a title="添加" class="btn btn-primary" onclick="add()" href="#"><i class="icon-white icon-plus"></i></a>
                                        <a title="编辑" class="btn" href="#" onclick="edit()"><i class="icon-edit"></i></a>
                                        <a title="上移" class="btn" href="#" onclick="upMove()"><i class="icon-arrow-up"></i></a>
                                        <a title="下移" class="btn" href="#" onclick="downMove()"><i class="icon-arrow-down"></i></a>
                                        <a title="设置默认" class="btn" href="#" onclick="setDefault()"><i class="icon-ok-circle"></i></a>
                                        <a title="删除" class="btn" href="#" onclick="deleteOption()"><i class="icon-trash"></i></a>
                                    </div><br>
                                    <div  class="relationcode"  style="display: none" >
                                        <div class="input-append" style="margin-right:10px;">
                                            <input type="hidden" id="relationtype" >
                                            <button class="btn disabled" type="button">联动</button>
                                            <select id="relationcode" class="selectpicker bla bla bli" multiple data-live-search="true" data-actions-box="true">

                                            </select>
                                        </div>
                                        <div class="input-append" style="margin-right:10px;">
                                            <button class="btn disabled" type="button">事件</button>
                                            <input id="relationfunc1" type="text"  class="span2" placeholder="事件" style="width:125px;border-radius:0 4px 4px 0;" />
                                            <select id="relationfunc2"  style="display: none;width: 125px;"></select>
                                        </div>
                                        <input id="rel_none" type="checkbox" /> 隐藏&nbsp;&nbsp;
                                        <input id="rel_dis"  type="checkbox" /> 禁用&nbsp;&nbsp;
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="tab2" style="display: none" >
                                <input type="text" placeholder="支持get请求的完整url地址（http://）" style="width:90%;" id="txtREMOTEURL" />
                            </div>
                        </div>
                    </div>
                </td>
            </tr>

        </table>
    </div>
    <style>
        .glyphicon-ok:before {
            content: url("img/checkArrow.png");
            position: absolute;
            top: -2px;
            right: 0px
        }
        :after, :before {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
    </style>
    <script type="text/javascript">
    var sdefun = new sdeFun();
    var _sde = window.parent.sde ;
    var temp;
    var ruleId;
    var ruleCode;
    var isEditor = !1;
    var templateList;
    var isclicktxtRuleList=!1;
    var sdeAllPlugin="";
    var ruleselecttempurl = window.parent.SDE_CONFIG.RULESELECTTEMPURL;

    //控件下拉选择框
    $("select#txtBINDINGDATA").on('click', function () {
        BINDINGDATAClick(this);
    });


    //规则取数
    $("select#txtRuleList").on('change', function () {
        $G("selectRuleResParam").innerHTML = '<option value=""> --请选择字段-- </option>';
        ruleCode = $(this).val();
        ruleId = $(this).find("option:selected").attr('rule_code');
        if(!ruleId){
            $G('selectCode').innerHTML = "";
            $G('txtRuleList').value ="";
            $G('selectRuleResParam').value ="";
            $G('selectRuleFindParam').value ="";
            window.combogrid && window.combogrid.clear();
            $G('inputTemplate').value ="";
            $G('selectCode').value ="";
            return;
        }else{
            getRuleParamByIframe(ruleCode);//获取规则查询参数
            getRuleResParam(ruleCode);//获取规则结果参数
        }
        console.log("ruleId:"+ruleId+",ruleCode:"+ruleCode);
    });

    $("input#OPENRULE").on('change', function () {
        if ($(this).is(':checked')) {
            $('.openRule').css("display", "");
        } else {
            $('.openRule').css("display", "none");
            $G('txtRuleList').value = "";
            $G('selectRuleResParam').value = "";
            combogrid.clear();
            $G('selectCode').value = "";
        }
    });
    $("input#DESCRIB").on('change', function () {
        if ($(this).is(':checked')) {
            $('.describ').css("display", "");
        } else {
            $('.describ').css("display", "none");
        }
    });

    $("select#txtRuleList").on('click', function () {
    });


    //当配置了选择模板url时,启用
    if(ruleselecttempurl){
        var $inputTemplate=$("#inputTemplate");
        $("#selectTemplate").css("display", "none");
        $inputTemplate.css("display", "");
        $inputTemplate.on('click', function (e) {
            if(!$("#txtRuleList").val()){
                alert("请选择规则");
                return "";
            }
            var $div = $("#inputTemplateDialog");
            $div.widgets({
                xtype:"dialog",
                title:'选择模板',
                width: 290,
                height: 420,
                closed: false,
                cache: false,
                modal: true,
                isIFrame: true
            });
            var url = ruleselecttempurl;
            var datasUrl=$inputTemplate.val()||"";
            var nodeId=datasUrl?datasUrl.split("|")[1]:"";
            $div.getWidget().open(url+"?nodeId="+nodeId);
        });
        //专门提供给外部接口
        function selectCode2(param) {
            if(!param){return}
            var $inputTemplate=$("#inputTemplate");
            $inputTemplate.val( param.node_name+"|"+param.node_id+"|"+param.template_ver_id);
            $inputTemplate.attr("node_id",param.node_id);
            $inputTemplate.attr("node_name",param.node_name);
            $inputTemplate.attr("template_ver_id",param.template_ver_id);
            var data = sdefun.templateFindByVId(param.template_ver_id);
            if(data.length===0){return}
            $("#inputTemplateDialog").getWidget().close();
            var content = data[0].content||data.data[0].content;
            var $cont = $(content);
            var codes = $cont.find("span[id][sde-model]");
            var html = [];
            console.log("外部接口selectCode2:"+JSON.stringify(codes));
            for (var i2 = 0,cl = codes.length; i2 < cl; i2++) {
                var sdeModel = $(codes[i2]).attr('sde-model');
                var json  = JSON.parse(sdeModel);
                var jsonCODE=json.ID||json.CODE;
                var jsonNAME=json.NAME+"|"+jsonCODE||"";

                if(jsonNAME.length>23){
                    jsonNAME = jsonNAME.substring(0,23);
                }
                html.push('<option value="' + jsonCODE + '" >' + jsonNAME + '</option>');
            }
            $("#selectCode.selectpicker").html(html.join(''));
            $('#selectCode').selectpicker('refresh');
        }
    }
    /* 关键字检验 */
    /*$("input#txtCODE").on('input propertychange',function(){
        if (isEditor) return;
        var val = $(this).val();
        checkKeyword(val);
    });
*/
    /* 唯一性检验 */
    $("input#txtCODE").on('blur',function(){
        //编辑则不需要校验
        if (isEditor) return;
    	//console.log(1);
    	var val = $(this).val();
        if (checkKeyword(val)) return;
    	var plugin = sdefun.pluginFindByCode(val);
    	if(plugin.length>0){
    		$("#txtCODE").css("border","#ff0000 1px solid");
    		$("#txtMsg").text("该控件编码已经存在");
    	}else{
    		$("#txtCODE").removeAttr("style");
    		$("#txtMsg").text("*");
    	}
    });

    $("select#relationcode").on('change', function () {
        var _this = $(this).find("option:selected");
        relationcodesetFunc(_this);
    });
    //获取下拉表格的值
    function queryBindById(id) {
        var tp_name1 = $(id).val();
        var tp_param = QueryParam.newCondition("name","%like%",tp_name1);
        window.combogrid.doQuery({conditions:tp_param});
    }
    //关键字校验
    function checkKeyword(val){
        var pluginregexp = parent.window.SDE_CONFIG.PLUGINREGEXP;//控件正则表达式.
        if(($.inArray(val, parent.window.SDE_KEYWORD))!==-1){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("系统关键字无法录入");
            return true;
        }else if(pluginregexp && new RegExp(pluginregexp).test(val)){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("非规范编码,无法录入");
            return true;
        }else{
            $("#txtCODE").removeAttr("style");
            $("#txtMsg").text("*");
            return false;
        }
    }

    //【规则取数】 根据传入的规则,获取规则查询参数
    function getRuleParamByIframe(ruleCode){
        var paramCode = {};
        paramCode.ruleCode = ruleCode;
        var ruleParamDatas = parent.sdefun.getRuleParamByCode(paramCode);
        console.log("ruleParamDatas:"+JSON.stringify(ruleParamDatas));
        if(ruleParamDatas.data.length==0)return;
        var $div = $("#templateDialogDiv");
        $div.widgets({
            xtype:"dialog",
            title:'关联条件',
            width: 400,
            height: 300,
            closed: false,
            cache: false,
            modal: true,
            isIFrame: true
        });
        var url = './dialogPage/ruleParam.vop?datas='+JSON.stringify(ruleParamDatas);
        $("#templateDialogDiv").getWidget().open(url);
        return ruleParamDatas;
    }

    //【规则取数】 根据iframe传回来的获取规则查询参数
    function panelSubmit(params){
        $("#selectRuleFindParam").val(JSON.stringify(params));
        panelClose();
    }

    //【规则取数】 关闭iframe
    function panelClose(params){
        $("#templateDialogDiv").getWidget().close();
    }

    //【规则取数】 根据_ruleCode获取规则结果参数
    function getRuleResParam(_ruleCode){
        var param = {};
        param.ruleCode = _ruleCode;
        param.param = "";
        var datas = sdefun.getRuleColumnByCode(param);//获取规则结果参数
        var resHtml = ['<option value=""> --请选择字段-- </option>'];
        if (datas.data && datas.data != undefined && datas.data != null) {
            var resParam = datas.data;
            for(var key in resParam){
                var obj = resParam[key];
                var aliasText = obj.alias$text || obj.columnTitle;
                resHtml.push('<option value="' + aliasText + '" resParamTXT="' + obj.columnTitle + '" val="' + JSON.stringify(resParam[key]) + '"  >' + aliasText + '</option>');
            }
        }
        $G("selectRuleResParam").innerHTML = resHtml.join('');
        return resHtml;
    }

    //【规则取数】 获取规则列表
    function getRuleList(selectId,param){
        var datas = sdefun.getRuleList(param);
        var html = [];
        html.push('<option value=""> --请选择规则-- </option>');
        if (datas && datas.data != undefined && datas.data != null) {
            var data = datas.data.data;
            var length = data.length;
            for (var i = 0; i < length; i++) {
                html.push('<option value="' + data[i].rule_code + '" rule_code="' + data[i].rule_id + '"')
                if (data[i].SELECTED != undefined && data[i].SELECTED == 1) {
                    html.push(' selected="selected" ');
                }
                html.push('>' + data[i].rule_name + '</option>');
            }
        }
        $G(selectId).innerHTML = html.join('');
        return html;
    }


    //【规则取数】根据模板id获取模板中的控件编码
    function selectCode(template_ver_id) {
        var data = sdefun.templateFindByVId(template_ver_id)[0];
                var content = data.content;
                var $cont = $(content);
                var codes = $cont.find("span[id]");
                var cl = codes.length;
                console.log("selectCode:"+JSON.stringify(codes)+"codes.length:"+cl);
                var html = [];
                //html.push('<option value=""> --请选择控件-- </option>');
                for (var ii = 0; ii < cl; ii++) {
                    var sdeModel = $(codes[ii]).attr('sde-model');
                    var json  = JSON.parse(sdeModel);
                    var jsonCODE=json.ID||json.CODE;
                    var jsonNAME=json.NAME+"|"+jsonCODE||"";
                    html.push('<option value="' + jsonCODE + '" >' + jsonNAME + '</option>');
                }
                $("#selectCode.selectpicker").html(html.join(''));
                $('#selectCode').selectpicker('refresh');

    }

    //【控件关联】
    function relationcodesetFunc($this){
        var pluignType = $this.attr('pluginType');
        $G("relationtype").value = pluignType;
        if(pluignType =='select'){
            $('#relationfunc1').css("display", "none");//input
            $('#relationfunc2').css("display", "");
            var bindingdata = $this.attr('bindingdata');
            var data = JSON.parse(bindingdata);
            var html = [];
            html.push('<option value=""> --请选择-- </option>');
            var dlength = data.length;
            for (var i = 0; i < dlength; i++) {
                if(data[i].ID == $G('txtCODE').value) continue;
                html.push('<option value="' + data[i].VALUE + '">' + data[i].TEXT + '</option>');
            }
            $G("relationfunc2").innerHTML = html.join('');
        }else{
            $('#relationfunc1').css("display", "");
            $('#relationfunc2').css("display", "none");
            $G("relationfunc1").value = $this.attr('pluginValue')||"";
        }
    }

    function BINDINGDATAClick(t) {
        if (t.selectedIndex < 0)return;//点击了 但是没有选中项
        $G('txtInputValue').value = t.value;
        $G('txtInputDesc').value = t.options[t.selectedIndex].text;
        if (!isEditor)return;
        var $selected=$(t.options[t.selectedIndex]);
        var relationfunc = $selected.attr('relationfunc')||"";
        var relationcode = $selected.attr('relationcode')||"";
        var rel_none = $selected.attr('rel_none')||"";
        var rel_dis = $selected.attr('rel_dis')||"";
        $G('rel_none').checked = false;
        $G('rel_dis').checked = false;
        if (rel_none == 1) {
            $G('rel_none').checked = true;
        }
        if (rel_dis == 1) {
            $G('rel_dis').checked = true;
        }

        var data;
        if(!sdeAllPlugin){
            sdeAllPlugin = parent.sde.getAllPlugin();
            data = sdeAllPlugin;
            var html = [];
            for ( var i = 0,dl= data.length; i < dl; i++) {
                if(data[i].ID == $G('txtCODE').value) continue;
                html.push('<option value="' + data[i].ID + '" pluginValue="' + data[i].VALUE + '" bindingdata=' + ""+ '  pluginType="' + data[i].TYPE + '">' + data[i].NAME + '</option>');
            }
            $("#relationcode").html(html.join(''));
            $('#relationcode').selectpicker('refresh');
        }
        //重现已经编辑到子选项的code
        $('#relationcode').selectpicker('val', relationcode?relationcode.split(","):"");

        $G('relationcode').value = relationcode;
        $('.relationcode').css("display", "");
        var _this = $('#relationcode').find("option:selected");
        relationcodesetFunc(_this);
        if($G("relationtype").value=='select'){
           $G('relationfunc2').value = (relationfunc!='undefined'?relationfunc:"");
        }else {
           $G('relationfunc1').value = (relationfunc!='undefined'?relationfunc:"");
        }
    }

    function add() {
        var ss = $G('txtBINDINGDATA');
        //if (ss.selectedIndex < 0)
        //    return;
        //判断是否重复
        var tempoptions = ss.options,
            iscan = true,
            txtInputValue = $G('txtInputValue').value,
            txtInputDesc = $G('txtInputDesc').value;
        //
        for (var i = 0, l = tempoptions.length; i < l; i++) {
            if (tempoptions[i].value == txtInputValue) {
                alert(txtInputValue + '值已经存在，值不可重复');
                iscan = false;
            } else if (tempoptions[i].text == txtInputDesc) {
                alert(txtInputDesc + '描述已经存在，描述不可重复');
                iscan = false;
            }
            if (!iscan) break;
        }
        if (iscan) {
            var option = document.createElement("option");
            option.text = $G('txtInputDesc').value;
            option.value = $G('txtInputValue').value;
            if (option.value == '') {
                alert('添加值不可谓空！');
                return;
            }
            if (option.text == '') {
                alert('添加描述不可谓空！');
                return;
            }
            try {
                // 对于更早的版本IE8
                tempoptions.add(option, x.options[null]);
            } catch (e) {
                tempoptions.add(option, null);
            }
            if (isEditor){
                $(option).attr('relationcode',$G('relationcode').value||"");
                var rfunc;
                if( $G('relationtype').value ==='select'){
                    rfunc = $G('relationfunc2').value
                }else{
                    rfunc = $G('relationfunc1').value
                }
                $(option).attr('relationfunc',rfunc||"");
                if ($G('rel_none').checked) {
                    $(option).attr('rel_none',1);
                }else{
                    $(option).removeAttr('rel_none');
                }
                if ($G('rel_dis').checked) {
                    $(option).attr('rel_dis',1);
                }else{
                    $(option).removeAttr('rel_dis');
                }
                //清空关联
                $G('relationcode').value = '';
                $G('relationfunc1').value = '';
                $G('relationfunc2').value = '';
                $G('rel_none').checked = false;
                $G('rel_dis').checked = false;
            }
        }
        $G('txtInputValue').value = '';
        $G('txtInputDesc').value = '';

    }

    function edit() {

        var ss = $G('txtBINDINGDATA');
        if (ss.selectedIndex < 0)
            return;
        //判断是否重复
        var tempoptions = ss.options,
            iscan = true,
            txtInputValue = $G('txtInputValue').value,
            txtInputDesc = $G('txtInputDesc').value;
        if (txtInputValue == '') {
            alert('修改值不可谓空！');
            return;
        }
        if (txtInputDesc == '') {
            alert('修改描述不可谓空！');
            return;
        }
        for (var i = 0, l = tempoptions.length; i < l; i++) {
            if (i != ss.selectedIndex) { //不能有相同的
                if (tempoptions[i].value == txtInputValue) {
                    alert(txtInputValue + '值已经存在，值不可重复');
                    iscan = false;
                } else if (tempoptions[i].text == txtInputDesc) {
                    alert(txtInputDesc + '描述已经存在，描述不可重复');
                    iscan = false;
                }
            }
            if (!iscan) break;
        }
        if (iscan) {
            var sselected = ss.options[ss.selectedIndex];
            sselected.value = txtInputValue;
            sselected.text = txtInputDesc;
            if (isEditor){
                var $selected = $(sselected);
                $selected.attr('relationcode',$("#relationcode").val()||"");
                var rfunc;
                if( $G('relationtype').value ==='select'){
                    rfunc = $G('relationfunc2').value
                }else{
                    rfunc = $G('relationfunc1').value
                }
                $selected.attr('relationfunc',rfunc||"");

                if ($G('rel_none').checked) {
                    $selected.attr('rel_none',1);
                }else{
                    $selected.removeAttr('rel_none');
                }
                if ($G('rel_dis').checked) {
                    $selected.attr('rel_dis',1);
                }else{
                    $selected.removeAttr('rel_dis');
                }
                //清空关联
                $G('relationcode').value = '';
                $G('relationfunc1').value = '';
                $G('relationfunc2').value = '';
                $G('rel_none').checked = false;
                $G('rel_dis').checked = false;
            }
        }
        $G('txtInputValue').value = '';
        $G('txtInputDesc').value = '';
    }

    function upMove() {
        var ss = $G('txtBINDINGDATA');
        if (ss.selectedIndex < 0)
            return;
        if (ss.selectedIndex == 0) return;
        var currentIndex = ss.selectedIndex;
        var opt = ss.options[currentIndex - 1];
        ss.options.remove(currentIndex - 1);
        ss.options.add(opt, currentIndex);
    }

    function deleteDefaultOption() {
        var doc = $G('txtDEFAULTVALUE');
        doc.value = '';
        doc.setAttribute('sde-value', '');
    }

    function downMove() {
        var ss = $G('txtBINDINGDATA');
        if (ss.selectedIndex < 0) return;
        if (ss.selectedIndex + 1 == ss.options.length) return;
        var currentIndex = ss.selectedIndex;
        var opt = ss.options[currentIndex + 1];
        ss.options.remove(currentIndex + 1);
        ss.options.add(opt, currentIndex);
    }

    function setDefault() {
        var ss = $G('txtBINDINGDATA');
        if (ss.selectedIndex < 0) return;
        $G('txtDEFAULTVALUE').setAttribute('sde-value', ss.value);
        $G('txtDEFAULTVALUE').value = ss.value + '|' + ss.options[ss.selectedIndex].text; //默认值value|desc
    }

    function deleteOption() {
        var ss = $G('txtBINDINGDATA');
        if (ss.selectedIndex < 0) return;
        if ($G('txtDEFAULTVALUE').getAttribute('sde-value') == ss.value) {
            $G('txtDEFAULTVALUE').setAttribute('sde-value', '');
            $G('txtDEFAULTVALUE').value = '';
        }
        ss.options.remove(ss.selectedIndex);
    }

    (function(UE) {
       /*$('.selectpicker').selectpicker({
           'selectedText': 'cat',
            size: 10
        });*/
        var getRuleLists = getRuleList("txtRuleList",{param:{}});
        $W.databind.arrayDatabind({
            id : 'templateGrid',
            name : '模板绑定',
            autoload : true,
            pagePath:"/config/editor/func/templateList/templateList/templateList",
            binds : ['#selectTemplate']
        });
        var oNode = null,
            thePlugins = 'sdecontrolselect';
        //初始化加载之前编辑的数据
        window.onload = function() {
            window.combogrid = $('#selectTemplate').getWidget();
            if (UE.plugins[thePlugins].editdom) {

                oNode = UE.plugins[thePlugins].editdom;
                temp = oNode;
                if (oNode) {
                    isEditor = !0;
                }
                var json = JSON.parse(oNode.getAttribute('sde-model'));
                if (!json || json == null) {
                    console.error("无法json序列化！");
                    return;
                }
                $G('PLUGINID').value = json.PLUGINID;
                $G('VER_ID').value = json.VER_ID;
                $G('txtCODE').value = json.ID||json.CODE;
                $G('txtCODE').title = "控件ID："+json.PLUGINID+"，版本号："+json.VER_ID;
                $G('txtNAME').value = json.NAME;
                if(json.TEXT_COLOR){
                    $G('txtCOLOR').value = json.TEXT_COLOR;
                    $G('txtCOLOR').style.backgroundColor = "#" +json.TEXT_COLOR;
                }
                if(json.RULE){
                    $('#OPENRULE').checked = true;
                    $('.openRule').css("display", "");
                    $('#txtRuleList').val(json.RULE);
                }
                $("#selectRuleFindParam").val(json.RULE_FPARAM||"");
                var rule_rparam = json.RULE_RPARAM||"";
                if(rule_rparam)$G("selectRuleResParam").innerHTML = '<option value="'+rule_rparam+'"  selected="selected" > '+rule_rparam+'</option>';
                if(ruleselecttempurl && json.CONN_TEMPLATE_VER_ID ){
                    var template_ver_ids=json.CONN_TEMPLATE_VER_ID.split("|");
                    $('#inputTemplate').val(json.CONN_TEMPLATE_VER_ID||"");
                    $('#inputTemplate').attr("node_name",template_ver_ids[0]);
                    $('#inputTemplate').attr("node_id",template_ver_ids[1]);
                    $('#inputTemplate').attr("template_ver_id",template_ver_ids[2]);
                }else if(json.CONN_TEMPLATE_VER_ID){
                    json.CONN_TEMPLATE_VER_ID && combogrid.setValue(json.CONN_TEMPLATE_VER_ID) ;
                }
                var selectCodeArr=[];
                var CONNCODES=json.CONNCODE;
                for(var i3 in CONNCODES){
                    selectCodeArr.push('<option value="'+CONNCODES[i3]+'"  selected="selected" > '+CONNCODES[i3]+' </option>');
                }
                $('#selectCode').html( selectCodeArr.join(''));
                $('#selectCode').selectpicker('refresh');
                $G('txtTAG').value = json.TAG;
                $G('txtDESCNAME').value = (json.DESCNAME && json.DESCNAME!="undefined")?json.DESCNAME :"";
                $G('txtVERIFYTYPE').value = json.VERIFYTYPE||"select"; //默认值select
                $G('labelVALUE').value = typeof($(oNode).prev().attr("_name")) == "undefined" ? "" : $(oNode).prev().html();
                /*2017-12-24 nothing 计算表达式 start*/
                var defaultstr = '';
                if($.isArray(json.VALUE)){
                    for(var i in json.VALUE){
                        defaultstr += json.VALUE[i].TEXT;
                    }
                }else{
                    defaultstr = json.VALUE
                }
                $G('txtDEFAULTVALUE').setAttribute('sde-value', defaultstr);
                if (json.VALUE != null && json.VALUE != '') {
                    if($.isArray(json.VALUE)){
                        var value_str = '';
                        for(var i in json.VALUE){
                            value_str += json.VALUE[i].VALUE + '|' + json.VALUE[i].TEXT + ','
                        }
                    }else{
                        $G('txtDEFAULTVALUE').value = json.VALUE + '|' + json.TEXT; //默认值value|desc
                    }
                }
                /*2017-12-24 nothing 计算表达式 end*/
                $G('txtREMOTEURL').value = json.REMOTEURL?json.REMOTEURL:'';
                var arr = [undefined,"undefined",""];
                if($.inArray($G('labelVALUE').value,arr) == -1){
                    $G('DESCRIB').checked = true;
                    $(".describ").css("display", "");
                }else{
                    $G('DESCRIB').checked = false;
                    $(".describ").css("display", "none");
                }
                if (json.REQUIRED == 1) {
                    $G('txtREQUIRED').checked = true;
                }
                if (json.FREEINPUT == 1) {
                    $G('txtFREEINPUT').checked = true;
                }
                if (json.ISDISPLAY == 1) {
                    $G('txtISDISPLAY').checked = true;
                }
                if (json.ISBRACKETS == 1) {
                    $G('ISBRACKETS').checked = true;
                }
                if (json.ISREDPOINT == 1) {
                    $G('ISREDPOINT').checked = true;
                }
                if (json.OPENRULE == 1) {
                    $G('OPENRULE').checked = true;
                    $('.openRule').css("display", "");
                }

                var html = [];
                var datas = json.BINDINGDATA;
                if (datas && datas != undefined && datas != null) {
                    for (var i = 0, l = datas.length; i < l; i++) {
                        var rc = datas[i].RELATIONCODE?(" relationcode='"+datas[i].RELATIONCODE+"' "):"";
                        var rf = datas[i].RELATIONFUNC?(" relationfunc='"+datas[i].RELATIONFUNC+"' "):"";
                        var rn = datas[i].rel_none?(" rel_none='"+datas[i].rel_none+"' "):"";
                        var rd = datas[i].rel_dis?(" rel_dis='"+datas[i].rel_dis+"' "):"";
                        html.push('<option value="' + datas[i].VALUE + '"'+rc+rf+rd+rn)
                        if (datas[i].SELECTED != undefined && datas[i].SELECTED == 1) {
                            html.push(' selected="selected" ');
                        }
                        html.push('>' + datas[i].TEXT + '</option>');
                    }
                }
                $G('txtBINDINGDATA').innerHTML = html.join('');
                $G('txtCODE').setAttribute('readonly', 'readonly');
            }
            $G('txtCODE').focus();
        };

        dialog.oncancel = function() {
            if (UE.plugins[thePlugins].editdom) {
                delete UE.plugins[thePlugins].editdom;
            }
        };
        dialog.onok = function() {
            var cv = $G('txtCODE').value;
            if ($G('txtCODE').value == '') {
                alert('请输入控件ID');
                return false;
            }
            if (!oNode && checkKeyword(cv)) {
                alert('控件编码不符合规范');
                return false;
            }
            if ($G('txtNAME').value == '') {
                alert('请输入控件名称');
                return false;
            }
            var txtBINDINGDATA = $G('txtBINDINGDATA'),
                selectIndex = txtBINDINGDATA.selectedIndex,
                selectOptions = txtBINDINGDATA.options,
                selectValue = $G('txtDEFAULTVALUE').getAttribute('sde-value'),
                selectDesc = '',
                selectData = [];
            if (selectOptions != undefined && selectOptions.length > 0) {
                for (var i = 0, l = selectOptions.length; i < l; i++) {
                    var sOption = selectOptions[i];
                    selectData.push({
                        VALUE: sOption.value,
                        TEXT: sOption.text,
                        RELATIONCODE: $(sOption).attr('relationcode')||'',
                        RELATIONFUNC: $(sOption).attr('relationfunc')||'',
                        rel_none: $(sOption).attr('rel_none')||'',
                        rel_dis: $(sOption).attr('rel_dis')||'',
                        SELECTED: selectValue == sOption.value ? 1 : 0
                    });
                    if (selectValue == sOption.value) selectDesc = sOption.text;
                }
            }
            var ruleSelectTempVal = combogrid.getValue();;
            if(ruleselecttempurl){
                ruleSelectTempVal = $('#inputTemplate').attr("node_name")+"|"
                    +$('#inputTemplate').attr("node_id")+"|"
                    +$('#inputTemplate').attr("template_ver_id");
            }
            var json = {
                ID: $G('txtCODE').value,
                CODE: $G('txtCODE').value,
                TYPE: 'select',
                NAME: $G('txtNAME').value,
                TAG: $G('txtTAG').value,
                DESCNAME: $G('txtDESCNAME').value,
                VERIFYTYPE: $G('txtVERIFYTYPE').value,
                REQUIRED: 0,
                FREEINPUT: 0,
                RULE: $G('txtRuleList').value,
                RULE_FPARAM:$G('selectRuleFindParam').value||$G('txtRuleList').value,
                RULE_RPARAM:$G('selectRuleResParam').value,
                CONN_TEMPLATE_VER_ID: combogrid.getValue(),
                CONNCODE: $("#selectCode").val(),
                TEXT_COLOR: $G('txtCOLOR').value,
                VALUE: (selectValue == null || selectValue == '') ? '' : selectValue,
                LABEL: $G('labelVALUE').value,
                TEXT: selectDesc,
                REMOTEURL: $G('txtREMOTEURL').value, //url
                BINDINGDATA: selectData //数据
            };
            if ($G('txtREQUIRED').checked) {
                json.REQUIRED = 1;
            }
            if ($G('txtFREEINPUT').checked) {
                json.FREEINPUT = 1;
            }
            if ($G('txtISDISPLAY').checked) {
                json.ISDISPLAY = 1;
            }
            if ($G('ISBRACKETS').checked) {
                json.ISBRACKETS = 1;
            }
            if ($G('ISREDPOINT').checked) {
                json.ISREDPOINT = 1;
            }
            if ($G('OPENRULE').checked) {
                json.OPENRULE = 1;
            }
            /*2017-12-24 king 计算表达式 start*/
            var expshow = json.VALUE;
            if(parent.sde.isSDEExpStr(expshow)){
                json.EXPSTR = json.VALUE;
            }
            /*2017-12-24 king 计算表达式 end*/
            var html = sdefun.makeHtmlByPluginJson(json);//根据老的plugin，生成html;
            json.plugin_ex_json =[];
            if (!oNode) {
                if(json.ISREDPOINT){json.plugin_ex_json.push({"field_code":"isredpoint","field_name":"小红点","field_value":json.ISREDPOINT}) ;}
                if(json.LABEL){json.plugin_ex_json.push({"field_code":"label","field_name":"描述文字","field_value":json.LABEL}) ;}
                if(json.ISBRACKETS){
                        json.plugin_ex_json.push({"field_code":"isbrackets","field_name":"隐藏括号","field_value":json.ISBRACKETS}) ;
                    }
                    if(json.VERIFYTYPE){
                        json.plugin_ex_json.push({"field_code":"verifytype","field_name":"数据类型","field_value":json.VERIFYTYPE}) ;
                    }
                    json.OPENRULE?json.plugin_ex_json.push({"field_code":"openrule","field_name":"是否打开规则","field_value":json.OPENRULE}):"";
                    json.FREEINPUT?json.plugin_ex_json.push({"field_code":"freeinput","field_name":"可补充","field_value":json.FREEINPUT}):"";
                    json.REMOTEURL?json.plugin_ex_json.push({"field_code":"remoteurl","field_name":"动态数据","field_value":json.REMOTEURL}):"";
                    json.CONNCODE?json.plugin_ex_json.push({"field_code":"conncode","field_name":"关联取数","field_value":json.CONNCODE}):"";
                    json.CONN_TEMPLATE_VER_ID?json.plugin_ex_json.push({"field_code":"conn_template_ver_id","field_name":"关联模板ID","field_value":json.CONN_TEMPLATE_VER_ID}):"";

                    var oNodeHtml;
                    var plugin=sdefun.pluginFindByCode(json.CODE);//根据code 去查询控件库是否已经存在
                    if(plugin.length>0){
                        oNodeHtml = sdefun.pluginIsContinue(plugin[0]);//根据老的plugin，生成html;
                    }else{
                        plugin = sdefun.addPlugin(json);
                        plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id})[0];
                        oNodeHtml = sdefun.pluginToHtml(plugin);
                    }
                    return oNodeHtml ?editor.execCommand('insertHtml',oNodeHtml):false;
            } else {
                json.VER_ID = $G('VER_ID').value||"";
                json.PLUGINID = $G('PLUGINID').value||"";

                /*var plugin = sdefun.pluginFindByCode(json.CODE);
                var pluginToJ ;
                if(plugin.length < 1){
                    plugin = sdefun.addPlugin(json);
                    plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id});
                }else{
                    json.VER_ID = plugin[0].ver_id;
                    json.ID = plugin[0].id;
                    plugin = sdefun.updatePlugin(json).data;
                }
                pluginToJ = sdefun.pluginToJson(plugin);*/
                if(json.VER_ID)oNode.setAttribute('ver_id', json.VER_ID);
                if(json.VERIFYTYPE)oNode.setAttribute('verifytype', json.VERIFYTYPE);
                if(json.RULE)oNode.setAttribute('rule', json.RULE);
                oNode.setAttribute('title', json.NAME);
                oNode.setAttribute('id', json.ID?json.ID:json.CODE);
                oNode.setAttribute('sde-model', JSON.stringify(json));
                //增加控件前边显示名称功能 Nothing 2018-01-12
                var $oNode = $(oNode);
                if($G("DESCRIB").checked){
                    if(typeof($oNode.prev().attr("_name")) == "undefined"){
                        $oNode.before("<span _name="+ json.ID +">" + json.LABEL + "</span>")
                    }else{
                        $oNode.prev().html(json.LABEL);
                    }
                }else{
                    $oNode.prev("[_name]").remove();
                }
                oNode.innerHTML = html;
                if(json.ISDISPLAY ==1){
                    if(typeof($(oNode).prev().attr("_name")) != "undefined"){
                        $(oNode).prev("[_name]").wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");
                    }
                    $(oNode).wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");

                };
                delete UE.plugins[thePlugins].editdom;
            }
        };
    })(UE);

    </script>
</body>

</html>