<!DOCTYPE html>
<html>

<head>
    <title>复选框</title>
    <#include '/common/head.vop'/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <!--[if lte IE 6]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap-ie6.css">
    <![endif]-->
    <!--[if lte IE 7]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/ie.css">
    <![endif]-->

    <script src="core.js?dd=132"></script>
    <script src="jscolor-2.0.4/jscolor.min.js"></script>
    <script src="js/jQuery.v3.1.2-pre.js"></script>
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="${ctx}/viewIII/resources/UE/sde_func.js"></script>
    <style>
        #cbxs {
            margin-left: 0;
        }
        
        #cbxs li {
            list-style: none;
            clear: both;
            line-height: 30px;
            margin-left: 0;
            display: flex;
        }
        
        #cbxs>li>label {
            float: left;
            line-height: 30px;
        }
        
        #cbxs>li>label>input[type="radio"],
        #cbxs>li>label>input[type="checkbox"] {
            margin: 8px 0 0;
        }
        
        #cbxs li a {
            display: none;
        }
        
        #cbxs li:hover a {
            display: inline;
        }
    </style>

</head>

<body>
    <div class="content">
        <table class="table table-bordered table-striped table-hover">
            <input type="hidden" id="VER_ID" name="VER_ID"  />
            <input type="hidden" id="PLUGINID" name="PLUGINID" />
            <tr>
                <th><span>控件编码 </span><span style="color: red;" id="txtMsg">*</span></th>
                <th><span>控件名称 </span><span style="color: red;">*</span></th>
            </tr>
            <tr>
                <td><input type="text" id="txtCODE" placeholder="必填项"></td>
                <td><input type="text" id="txtNAME" onblur="$G('txtDESCNAME').value = $G('txtNAME').value" placeholder="必填项"></td>
            </tr>
            <tr>
                <th><span>选项类型</span> </th>
                <th><span>描述名</span> </th>
            </tr>
            <tr>
                <td>
	                <select id="txtVERIFYTYPE">
	                <option value="checkbox" selected="selected">复选框</option>
	                <option value="radio">单选框</option>
	                <option value="selVal">选值框</option>
	                </select>
	            </td>
                <td><input type="text" id="txtDESCNAME" placeholder="描述名"></td>
            </tr>
        <tr>
        <th><span>标签</span> </th>
            <th><span>默认值</span> </th>
        </tr>
        <tr>
        <td><input type="text" id="txtTAG" placeholder="标签,多个用逗号隔开"></td>
            <td><input type="text" id="txtVALUE" placeholder="默认值"></td>
        </tr>
            <tr>
                <th><span>字体颜色</span> </th>
                <th><span>选填属性</span> </th>
            </tr>
            <tr>
                <td>
                    <input type="text" id="txtCOLOR" class="jscolor" placeholder="颜色" value="000000">
                </td>
                <td>
	                <input id="txtREQUIRED" type="checkbox" /> 必填&nbsp;&nbsp;
	                <input id="txtREADONLY" type="checkbox" /> 只读&nbsp;&nbsp;
	                <input id="txtISDISPLAY" type="checkbox" /> 隐藏&nbsp;&nbsp;
	                <input id="ISBRACKETS" type="checkbox" /> 括号&nbsp;&nbsp;</br>
                    <input id="ISREDPOINT" type="checkbox" /> 红点&nbsp;&nbsp;
                    <input id="DESCRIB" type="checkbox"/> 左侧&nbsp;&nbsp;
                    <input id="VERTICAL" type="checkbox"/> 垂直&nbsp;&nbsp;
                    <input id="ISRIGHTCHECKBOX" type="checkbox"/> 右边框&nbsp;&nbsp;
	            </td>    
                <!--<div class="input-append">
                        <input type="text" id="txtDEFAULTVALUE" readonly="readonly" placeholder="默认值"><a title="删除" class="btn" href="#" onclick="deleteDefaultOption()"><i class="icon-trash"></i></a>
                    </div>-->
            </tr>
            <!--<tr>
                <th colspan="2"><span>数据</span> </th>
            </tr>-->
            <tr class='describ' style="display:none">
                <th><span>左侧描述</span></th>
                <th><span> </span></th>
            </tr>
            <tr class='describ' style="display:none;">
                <td>
                    <input type="text" id="labelVALUE" placeholder="控件左侧的文字描述">
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="tabbable">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab1" onclick="$G('txtREMOTEURL').value = '';" data-toggle="tab">固定选项</a></li>
                            <li><a href="#tab2" data-toggle="tab">动态数据</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab1">
                                <ul id="cbxs">

                                </ul>
                                <div class="input-prepend">
                                    <div class="input-append" style="margin-right:10px;">
                                        <button class="btn disabled" type="button">值</button>
                                        <input type="text" id="txtInputValue" onchange="(($G('txtInputDesc').value=='')?$G('txtInputDesc').value = $G('txtInputValue').value:'')" class="span2" placeholder="值" style="width:100px;border-radius:0 4px 4px 0;" />
                                    </div>
                                    <div class="input-append" style="margin-right:10px;">
                                        <button class="btn disabled" type="button">描述</button>
                                        <input type="text" id="txtInputDesc" class="span2" placeholder="描述" style="width:100px;border-radius:0 4px 4px 0;" />
                                    </div>
                                    <div class="btn-group pull-right">
                                        <a title="添加" class="btn btn-primary" onclick="add()" href="#"><i class="icon-white icon-plus"></i></a>



                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="tab2">
                                <input type="text" placeholder="支持get请求的完整url地址（http://）" style="width:90%;" id="txtREMOTEURL" />
                            </div>
                        </div>
                    </div>
                </td>
            </tr>

        </table>
    </div>
    <script type="text/javascript">
    var sdefun= new sdeFun();
    var temp;
    var isEditor = !1;
    /* 唯一性检验 */
    $("input#txtCODE").on('blur',function(){
        //编辑则不需要校验
        if (isEditor) {
            return;
        }
    	var val = $(this).val();
        if (checkKeyword(val)) return;
    	var plugin = sdefun.pluginFindByCode(val);
    	if(plugin.length>0){
    		$("#txtCODE").css("border","#ff0000 1px solid");
    		$("#txtMsg").text("该控件编码已经存在");
    	}else{
    		$("#txtCODE").removeAttr("style");
    		$("#txtMsg").text("*");
    	}
    });
    $("input#DESCRIB").on('change', function () {
        if ($(this).is(':checked')) {
            $('.describ').css("display", "");
        } else {
            $('.describ').css("display", "none");
        }
    });
    //关键字校验
    function checkKeyword(val){
        var pluginregexp = parent.window.SDE_CONFIG.PLUGINREGEXP;//控件正则表达式.
        if(($.inArray(val, parent.window.SDE_KEYWORD))!==-1){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("系统关键字无法录入");
            return true;
        }else if(pluginregexp && new RegExp(pluginregexp).test(val)){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("非规范编码,无法录入");
            return true;
        }else{
            $("#txtCODE").removeAttr("style");
            $("#txtMsg").text("*");
            return false;
        }
    }
        function add() {
            var ss = $G('cbxs').children;
            var txtInputValue = $G('txtInputValue').value,
                txtInputDesc = $G('txtInputDesc').value;
            var li = document.createElement('li');
            li.setAttribute('v', txtInputValue);
            li.setAttribute('d', txtInputDesc);
            li.innerHTML = '<label class="checkbox cye-lm-tag"><input type="checkbox" class="cye-lm-tag" value="' + txtInputValue + '"/>' + txtInputDesc + '</label><a title="上移" class="btn" href="#" onclick="upMove(this)" style="margin-left:30px;"><i class="icon-arrow-up"></i></a><a title="下移" class="btn" href="#" onclick="downMove(this)"><i class="icon-arrow-down"></i></a><a title="删除" class="btn" href="#" onclick="deleteOption(this)"><i class="icon-trash"></i></a>'
            $G('cbxs').appendChild(li);
        }



        function upMove(t) {
            var ss = $G('cbxs').children,
                current = t.parentNode,
                previous = current.previousSibling;
            if (previous.nodeName !== 'LI') return;
            $G('cbxs').insertBefore(current, previous);
        }


        function downMove(t) {
            var ss = $G('cbxs').children,
                current = t.parentNode,
                next = current.nextSibling;
            if (next === null) return;
            $G('cbxs').insertBefore(next, current);
        }

        function deleteOption(t) {
            if (confirm('您确定要删除吗？')) {
                t.parentNode.remove();
            }
        }
        (function(UE) {
            var oNode = null,
                thePlugins = 'sdecontrolcbx';
            //初始化加载之前编辑的数据
            window.onload = function() {
                if (UE.plugins[thePlugins].editdom) {
                    oNode = UE.plugins[thePlugins].editdom;
                    temp = oNode;
                    if (oNode) {
                        isEditor = !0;
                    }
                    var json = JSON.parse(oNode.getAttribute('sde-model'));
                    if (!json || json == null) {
                        alert("无法json序列化！");
                        return;
                    }
                    $G('PLUGINID').value = json.PLUGINID;
                    $G('VER_ID').value = json.VER_ID;
                    $G('txtCODE').value = json.ID||json.CODE;
                    $G('txtCODE').title = "控件ID："+json.PLUGINID+"，版本号："+json.VER_ID;
                    $G('txtNAME').value = json.NAME;
                    if(json.TEXT_COLOR){
                        $G('txtCOLOR').value = json.TEXT_COLOR;
                        $G('txtCOLOR').style.backgroundColor = "#" +json.TEXT_COLOR;
                    }
                    $G('txtTAG').value = json.TAG;
                    $G('txtVERIFYTYPE').value = json.VERIFYTYPE||"checkbox"; //默认值select
                    $G('txtDESCNAME').value = (json.DESCNAME && json.DESCNAME!="undefined")?json.DESCNAME :"";
                    $G('txtREMOTEURL').value = json.REMOTEURL;
                    $G('labelVALUE').value = typeof($(oNode).prev().attr("_name")) == "undefined" ? "" : $(oNode).prev().html();
                    var arr = [undefined,"undefined",""];
                    if($.inArray($G('labelVALUE').value,arr) == -1){
                        $G('DESCRIB').checked = true;
                        $(".describ").css("display", "");
                    }else{
                        $G('DESCRIB').checked = false;
                        $(".describ").css("display", "none");
                    }
                    if (json.REQUIRED == 1) {
                        $G('txtREQUIRED').checked = true;
                    }
                    if (json.READONLY == 1) {
                        $G('txtREADONLY').checked = true;
                    }
                    if (json.ISDISPLAY == 1) {
                        $G('txtISDISPLAY').checked = true;
                    }
                    if (json.ISBRACKETS == 1) {
                        $G('ISBRACKETS').checked = true;
                    }
                    if (json.ISRIGHTCHECKBOX == 1) {
                        $G('ISRIGHTCHECKBOX').checked = true;
                    }
                    if (json.ISREDPOINT == 1) {
                        $G('ISREDPOINT').checked = true;
                    }
                    if (json.VERTICAL == 1) {
                        $G('VERTICAL').checked = true;
                    }
                    var html = [];
                    var datas = json.BINDINGDATA;
                    if (datas && datas != undefined && datas != null) {
                        for (var i = 0, l = datas.length; i < l; i++) {
                            var temp = datas[i];
                            html.push('<li v="' + temp.VALUE + '" d="' + temp.TEXT + '"><label class="checkbox cye-lm-tag"><input type="checkbox" ' + ((datas[i].CHECKED != undefined && datas[i].CHECKED == 1) ? ' checked="checked" ' : '') + ' class="cye-lm-tag" value="' + temp.VALUE + '"/>' + temp.TEXT + '</label><a title="上移" class="btn" href="#" onclick="upMove(this)" style="margin-left:30px;"><i class="icon-arrow-up"></i></a><a title="下移" class="btn" href="#" onclick="downMove(this)"><i class="icon-arrow-down"></i></a><a title="删除" class="btn" href="#" onclick="deleteOption(this)"><i class="icon-trash"></i></a></li>')
                        }
                    }
                    $G('cbxs').innerHTML = html.join('');
                    $G('txtCODE').setAttribute('readonly', 'readonly');
                }
                $G('txtCODE').focus();
            };

            dialog.oncancel = function() {
                if (UE.plugins[thePlugins].editdom) {
                    delete UE.plugins[thePlugins].editdom;
                }
            };
            dialog.onok = function() {
                var cv = $G('txtCODE').value;
                if ($G('txtCODE').value == '') {
                    alert('请输入控件ID');
                    return false;
                }
                if (!oNode && checkKeyword(cv)) {
                    alert('控件编码不符合规范');
                    return false;
                }
                if ($G('txtNAME').value == '') {
                    alert('请输入控件名称');
                    return false;
                }
                var selectData = [], //？？？？选中的数据
                    ss = $G('cbxs').children,
                    value = []; //选中的值？？？？
                for (var i = 0, l = ss.length; i < l; i++) {
                    var li = ss[i],
                        C = 0;
                    var d = li.getAttribute('d'),
                        v = li.getAttribute('v');
                    if (li.querySelector('input[type=checkbox]:checked') !== null) {
                        value.push({
                            TEXT: d,
                            VALUE: v
                        });
                        C = 1;
                    }
                    selectData.push({
                        TEXT: d,
                        VALUE: v,
                        CHECKED: C
                    });
                }
                var json = {
                	ID: $G('txtCODE').value,
                	CODE: $G('txtCODE').value,
                    TYPE: 'checkbox',
                    NAME: $G('txtNAME').value,
                    TAG: $G('txtTAG').value,
                    VERIFYTYPE: $G('txtVERIFYTYPE').value,
                    VALUE: $G('txtVALUE').value,
                    LABEL: $G('labelVALUE').value,
                    DESCNAME: $G('txtDESCNAME').value,
                    VERTICAL: $G('VERTICAL').checked,
                    TEXT_COLOR: $G('txtCOLOR').value,
                    VALUE: value,
                    REMOTEURL: $G('txtREMOTEURL').value, //url
                    BINDINGDATA: selectData //数据
                };
                if ($G('txtREQUIRED').checked) {
                    json.REQUIRED = 1;
                }
                if ($G('txtISDISPLAY').checked) {
                    json.ISDISPLAY = 1;
                }
                if ($G('txtREADONLY').checked) {
                    json.READONLY = 1;
                }
                if ($G('ISBRACKETS').checked) {
                    json.ISBRACKETS = 1;
                }
                if ($G('ISRIGHTCHECKBOX').checked) {
                    json.ISRIGHTCHECKBOX = 1;
                }
                if ($G('ISREDPOINT').checked) {
                    json.ISREDPOINT = 1;
                }
                if ($G('ISREDPOINT').checked) {
                    json.ISREDPOINT = 1;
                }
                if ($G('VERTICAL').checked) {
                    json.VERTICAL = 1;
                }

                json.plugin_ex_json =[];
                if(json.ISREDPOINT){json.plugin_ex_json.push({"field_code":"isredpoint","field_name":"小红点","field_value":json.ISREDPOINT}) ;}
                json.LABEL ? json.plugin_ex_json.push({"field_code":"label","field_name":"描述文字","field_value":json.LABEL}) : "";
                json.REMOTEURL?json.plugin_ex_json.push({"field_code":"remoteurl","field_name":"动态数据","field_value":json.REMOTEURL}):"" ;
                json.VERIFYTYPE?json.plugin_ex_json.push({"field_code":"verifytype","field_name":"数据类型","field_value":json.VERIFYTYPE}):"" ;
                json.ISBRACKETS?json.plugin_ex_json.push({"field_code":"isbrackets","field_name":"隐藏括号","field_value":json.ISBRACKETS}):"" ;
                json.ISRIGHTCHECKBOX?json.plugin_ex_json.push({"field_code":"isrightcheckbox","field_name":"右边框","field_value":json.ISRIGHTCHECKBOX}):"" ;
                json.VERTICAL ? json.plugin_ex_json.push({"field_code":"vertical","field_name":"垂直排列","field_value":json.VERTICAL}) : "";
                if (!oNode) {
                    var oNodeHtml;
                    var plugin=sdefun.pluginFindByCode(json.CODE);//根据code 去查询控件库是否已经存在
                    //console.log("-0");
                    if(plugin.length>0){
               			oNodeHtml = sdefun.pluginIsContinue(plugin[0]);//根据老的plugin，生成html;
	               	}else{
	               		//console.log("json:"+JSON.stringify(json));
	               		
	               		plugin = sdefun.addPlugin(json);
	               		plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id})[0];
	               		//console.log("plugin:"+JSON.stringify(plugin));
	               		
	               		oNodeHtml = sdefun.pluginToHtml(plugin);
	               		//console.log("2");
	               	}
               		return oNodeHtml ?editor.execCommand('insertHtml',oNodeHtml):false;
            	} else {
                    json.VER_ID = $G('VER_ID').value||"";
                    json.PLUGINID = $G('PLUGINID').value||"";
                    var html = sdefun.makeHtmlByPluginJson(json);//根据老的plugin，生成html;
                    if(true){
                        var plugin = sdefun.pluginFindByCode(json.CODE);
                        if(plugin.length < 1){
                            plugin = sdefun.addPlugin(json);
                            plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id});
                        }else{
                            json.VER_ID = plugin[0].ver_id;
                            json.ID = plugin[0].id;
                            plugin = sdefun.updatePlugin(json).data;
                        }
                        json = sdefun.pluginToJson(plugin);
                    }
                    if(json.VER_ID)oNode.setAttribute('ver_id', json.VER_ID);
                    if(json.VERIFYTYPE)oNode.setAttribute('verifytype', json.VERIFYTYPE);
                    oNode.setAttribute('title', json.NAME);
	                oNode.setAttribute('id', json.ID||json.CODE);
	                oNode.setAttribute('sde-model', JSON.stringify(json));
                    //增加控件前边显示名称功能 Nothing 2018-01-12
                    var $oNode = $(oNode);
                    if($G("DESCRIB").checked){
                        if(typeof($oNode.prev().attr("_name")) == "undefined"){
                            $oNode.before("<span _name="+ json.ID +">" + json.LABEL + "</span>")
                        }else{
                            $oNode.prev().html(json.LABEL);
                        }
                    }else{
                        $oNode.prev("[_name]").remove();
                    }
	                oNode.innerHTML = html;
                    if(json.ISDISPLAY ==1){
                        if(typeof($(oNode).prev().attr("_name")) != "undefined"){
                            $(oNode).prev("[_name]").wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");
                        }
                        $(oNode).wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");
                    };
	                delete UE.plugins[thePlugins].editdom;
            	}
        };
        })(UE);
    </script>
</body>

</html>