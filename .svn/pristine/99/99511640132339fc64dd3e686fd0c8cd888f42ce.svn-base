<!DOCTYPE html>
<html>

<head>
    <title>文本输入框框</title>
    <#include '/common/head.vop'/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <!--[if lte IE 6]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap-ie6.css">
    <![endif]-->
    <!--[if lte IE 7]>
    <link rel="stylesheet" type="text/css" href="bootstrap/css/ie.css">
    <![endif]-->
    <script src="core.js"></script>
    <script src="jscolor-2.0.4/jscolor.min.js"></script>
    <script type="text/javascript" src="${ctx}/viewIII/resources/UE/sde_func.js"></script>
</head>

<body>
    <div class="content">
        <table class="table table-bordered table-striped table-hover">
	        <input type="hidden" id="VER_ID" name="VER_ID"  />
	        <input type="hidden" id="PLUGINID" name="PLUGINID" />
            <tr>
                <th><span>控件编码 </span><span style="color: red;" id="txtMsg">*</span></th>
                <th><span>控件名称 </span><span style="color: red;">*</span></th>
            </tr>
            <tr>
                <td><input type="text" id="txtCODE" placeholder="必填项"></td>
                <td><input type="text" id="txtNAME" onblur="$G('txtDESCNAME').value = $G('txtNAME').value" placeholder="必填项"></td>
            </tr>
            <tr>
                <th><span>标签</span> </th>
                <th><span>描述名</span> </th>
            </tr>
            <tr>
                <td><input type="text" id="txtTAG" placeholder="标签,多个用逗号隔开"></td>
                <td><input type="text" id="txtDESCNAME" placeholder="描述名"></td>
            </tr>
            <tr>
                <th><span>数据类型</span> </th>
                <th><span>默认值</span> </th>
            </tr>
            <tr>
                <td>
                    <select id="txtVERIFYTYPE" style="width: 130px !important;">
                        <option value="text" selected="selected">普通文本</option>
                        <option value="email">邮箱地址</option>
                        <option value="textarea">文本域</option>
                        <option value="input">输入框</option>
                        <option value="int">整数</option>
                        <option value="float">小数</option>
                        <option value="idcard">身份证号码</option>
                    </select>
                    <span>框长<input type="text" id="TEXTLENGTH" style="width: 50px;"><span class="text-col">px</span></span><br />
                    <span id="textarea-width" style="margin-left:155px;display:none">框宽<input type="text" id="TEXTCOLS" style="width: 50px;"><span class="text-row">px</span></span>
                </td>
                <td>
                    <input type="text" id="txtVALUE" placeholder="控件默认值">&nbsp;
                    <span style="color: red;display: none" id="txtExpMsg">校验</span>
                </td>
            </tr>
            <tr>
            	<th><span>字体颜色</span> </th>
                <th><span>选填属性</span> </th>
            </tr>
            <tr>
            <td>
            <input type="text" id="txtCOLOR" class="jscolor" placeholder="颜色" value="000000">
            </td>
                <td>
                    <input id="txtREQUIRED" type="checkbox" /> 必填&nbsp;&nbsp;
                    <input id="txtREADONLY" type="checkbox" /> 只读&nbsp;&nbsp;
                    <input id="txtISDISPLAY" type="checkbox" /> 隐藏&nbsp;&nbsp;
                    <input id="ISBRACKETS" type="checkbox" /> 括号&nbsp;&nbsp;
                    <input id="ISREDPOINT" type="checkbox" /> 红点&nbsp;&nbsp;</br>
                    <input id="ISDBLCLICK" type="checkbox"/> 双击&nbsp;&nbsp;
                    <input id="OPENRULE" type="checkbox"/> 规则&nbsp;&nbsp;
                    <input id="DESCRIB" type="checkbox"/> 左侧&nbsp;&nbsp;
                    <input id="isCHECK" type="checkbox"/> 校验&nbsp;&nbsp;
                </td>
            </tr>
            <tr class='describ' style="display:none">
                <th><span>左侧描述</span></th>
                <th><span> </span></th>
            </tr>
            <tr class='describ' style="display:none;">
                <td>
                    <input type="text" id="labelVALUE" placeholder="控件左侧的文字描述">
                </td>
                <td>
                </td>
            </tr>
            <tr class='isdblclick' style="display: none">
                <th><span>双击事件名称 </span></th>
                <th><span> </span></th>
            </tr>
            <tr class='isdblclick' style="display: none">
                <td>
                    <input type="text" id="txtDBLCLICKFUNCTION" placeholder="双击事件名称">
                </td>
                <td>
                </td>
            </tr>
            <tr class='openRule' style="display:none;">
                <td  align="center" style="width: 600px;" colspan ="2">
                    <span>&nbsp;关联规则：</span>
                    <select id="txtRuleList" style="width: 150px;"><!--<option value="" selected="selected">-请选择规则-</option>--></select>
                    <select id="selectTemplate" style="width: 150px;"><!--<option value="" selected="selected">-请选择模板-</option>--></select>
                    <select id="selectCode" style="width: 150px;"> <!--<option value="" selected="selected">-请选择控件-</option>--></select>
                </td>
                <td>


                </td>
            </tr>
            <tr class='isCHECK' style="display:none;">
                <td  align="center"  colspan ="2">
                    <span>&nbsp;校验：</span>
                    <input type="text" id="TEXTCHECK" style="width: 170px;" placeholder="校验表达式">
                    <span>&nbsp;提示：</span>
                    <input type="text" id="CHECKMSG" style="width: 170px;" placeholder="提示信息">
                </td>

            </tr>
        </table>
    </div>

    <script type="text/javascript">
    var sdefun= new sdeFun();
    var temp;
    var isEditor = !1;
    var templateList;
    var isclicktxtRuleList=!1;
    $("select#txtRuleList").change(function(){
        ruleId = $(this).val();
        ruleCode = $(this).find("option:selected").attr('rule_code');
        if(!ruleId){
            $G('selectCode').innerHTML = ['<option value=""> --请选择控件-- </option>'].join('');
            return;
        }
        console.log("ruleId:"+ruleId+",ruleCode:"+ruleCode);
    });
    $("select#txtRuleList").on('click', function () {
        if(!isclicktxtRuleList)templateListFun();
        isclicktxtRuleList=!0;
    });

    $("input#OPENRULE").on('change', function () {
        if ($(this).is(':checked')) {
            $('.openRule').css("display", "");
        } else {
            $('.openRule').css("display", "none");
            $G('txtRuleList').value = "";
            $G('selectTemplate').value = "";
            $G('selectCode').value = "";
        }
    });

    $("select#selectTemplate").on('change', function () {
        var template_ver_id = $(this).val();

        if(!template_ver_id){return;}
        console.log('template_ver_id:'+template_ver_id);
        selectCode(template_ver_id);
    });
    /* 唯一性检验 */
    $("input#txtCODE").on('blur',function(){
        //编辑则不需要校验
        if (isEditor) {
            return;
        }
    	var val = $(this).val();
        if (checkKeyword(val)) return;
    	var plugin = sdefun.pluginFindByCode(val);
    	if(plugin.length>0){
    		$("#txtCODE").css("border","#ff0000 1px solid");
    		$("#txtMsg").text("该控件编码已经存在");
    	}else{
    		$("#txtCODE").removeAttr("style");
    		$("#txtMsg").text("*");
    	}
    });
    /*2017-12-24 king 计算表达式 start*/
    $("input#txtVALUE").on('blur',function(){
        var expshow = $(this).val();
        if(parent.sde.isSDEExpStr(expshow)){
            $("span#txtExpMsg").show();
        }else{
            $("span#txtExpMsg").hide();
        }
    });
    /*2017-12-24 king 计算表达式 start*/
    $("span#txtExpMsg").on('click',function(){
        var expshow = $("input#txtVALUE").val();
        var thisSDE = parent.sde ? parent.sde:sde;
        if(thisSDE.isSDEExpStr(expshow)){
            var score = thisSDE.getControlScore();
            var replaceStr = thisSDE.expReplaceMath(expshow);
            var ev='NaN';
            try {
                ev = eval(replaceStr);
            }catch(e){
                ev='表达式错误!';
                console.warn(ev+e);
            }
            alert(ev);
        }
    });

    $("input#ISDBLCLICK").on('change', function () {
        if ($(this).is(':checked')) {
            $('.isdblclick').css("display", "");
        } else {
            $('.isdblclick').css("display", "none");
        }
    });
    $("input#isCHECK").on('change', function () {
        if ($(this).is(':checked')) {
            $('.isCHECK').css("display", "");
        } else {
            $('.isCHECK').css("display", "none");
            $G('TEXTCHECK').value = '';
            $G('CHECKMSG').value = '';
        }
    });
    $("input#DESCRIB").on('change', function () {
        if ($(this).is(':checked')) {
            $('.describ').css("display", "");
        } else {
            $('.describ').css("display", "none");
        }
    });
    //关键字校验
    function checkKeyword(val){
        var pluginregexp = parent.window.SDE_CONFIG.PLUGINREGEXP;//控件正则表达式.
        if(($.inArray(val, parent.window.SDE_KEYWORD))!==-1){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("系统关键字无法录入");
            return true;
        }else if(pluginregexp && new RegExp(pluginregexp).test(val)){
            $("#txtCODE").css("border","#ff0000 1px solid");
            $("#txtMsg").text("非规范编码,无法录入");
            return true;
        }else{
            $("#txtCODE").removeAttr("style");
            $("#txtMsg").text("*");
            return false;
        }
    }

    function selectCode(template_ver_id) {
        for (var i = 0, l = templateList.length; i < l; i++) {
            var data = templateList[i];

            if(data.template_ver_id.toString() === template_ver_id){
                //debugger
                var content = data.content;
                var $ss=$(content);
                var codes = $ss.find("span[id]");
                var cl = codes.length;
                console.log("selectCode:"+JSON.stringify(codes)+"codes.length:"+cl);
                var html = [];
                html.push('<option value=""> --请选择控件-- </option>');
                for (var ii = 0; ii < cl; ii++) {
                    var sdeModel = $(codes[ii]).attr('sde-model');
                    var json  = JSON.parse(sdeModel);
                    var jsonCODE=json.ID||json.CODE;
                    var jsonNAME=jsonCODE+"|"+json.NAME||"";
                    html.push('<option value="' + jsonCODE + '" >' + jsonNAME + '</option>');
                }

                $G("selectCode").innerHTML = html.join('');
            }
        }
    }

    function getRuleList(selectId,param){
        //debugger
        var datas = sdefun.getRuleList(param);
        var html = [];
        html.push('<option value=""> --请选择规则-- </option>');
        if (datas && datas.data != undefined && datas.data != null) {
            var data = datas.data.data;
            // //debugger;
            for ( var i = 0; i < data.length; i++) {
                html.push('<option value="' + data[i].rule_code + '" rule_code="' + data[i].rule_id + '"')
                if (data[i].SELECTED != undefined && data[i].SELECTED == 1) {
                    html.push(' selected="selected" ');
                }
                html.push('>' + data[i].rule_name + '</option>');
            }
        }
        $G(selectId).innerHTML = html.join('');
        return html;
    }
    function templateListFun(){
        templateList = sdefun.templateFindAll();
        var html = [];
        html.push('<option value=""> --请选择模板-- </option>');
        for (var i = 0, l = templateList.length; i < l; i++) {
            var data = templateList[i];
            //debugger
            html.push('<option value="' + data.template_ver_id + '" >' +i+","+ data.name + '</option>');
        }
        $G('selectTemplate').innerHTML = html.join('');
    }
        (function(UE) {
            var getRuleLists = getRuleList("txtRuleList",{param:{}});

            //templateList();
            var oNode = null,
                thePlugins = 'sdecontroltext';
            //初始化加载之前编辑的数据
            window.onload = function() {
                if (UE.plugins[thePlugins].editdom) {
                    oNode = UE.plugins[thePlugins].editdom;
                    temp = oNode;
                    if (oNode) {
                        isEditor = !0;
                    }
                    var json = JSON.parse(oNode.getAttribute('sde-model'));
                    if (!json || json == null) {
                        console.error("无法json序列化！");
                        return;
                    }
                    //json = gValue == null ? '' : gValue;
                    //gTitle = gTitle == null ? '' : gTitle;
                    $G('PLUGINID').value = json.PLUGINID;
                    $G('VER_ID').value = json.VER_ID;
                    $G('txtCODE').value = json.ID||json.CODE;
                    $G('txtCODE').title = "控件ID："+json.PLUGINID+"，版本号："+json.VER_ID;
                    $G('txtNAME').value = json.NAME||"";
                    if(json.TEXT_COLOR){
                       $G('txtCOLOR').value = json.TEXT_COLOR;
                        $G('txtCOLOR').style.backgroundColor = "#" +json.TEXT_COLOR;
                    }
                    if(json.RULE){
                        $G('OPENRULE').checked = true;
                        $('.openRule').css("display", "");
                        $G('txtRuleList').value = json.RULE;
                    }
                    var conn_template_ver_idhtml = ['<option value="'+json.CONN_TEMPLATE_VER_ID+'"  selected="selected" > '+json.CONN_TEMPLATE_VER_ID+' </option>'];
                    $G('selectTemplate').innerHTML = json.CONN_TEMPLATE_VER_ID?conn_template_ver_idhtml.join(''):"";
                    var selectCodehtml = ['<option value="'+json.CONNCODE+'"  selected="selected" > '+json.CONNCODE+' </option>'];
                    $G('selectCode').innerHTML = json.CONNCODE?selectCodehtml.join(''):"";
                    $G('txtTAG').value = json.TAG;
                    /*2017-12-24 king 计算表达式 start*/
                    $G('txtVALUE').value = json.EXPSTR?json.EXPSTR:json.VALUE;
                    /*2017-12-24 king 计算表达式 end*/
                    $G('txtDESCNAME').value = (json.DESCNAME && json.DESCNAME!="undefined")?json.DESCNAME :"";
                    $G('txtVERIFYTYPE').value = json.VERIFYTYPE||"text";//默认选项
                    $G('labelVALUE').value = typeof($(oNode).prev().attr("_name")) == "undefined" ? "" : $(oNode).prev("[_name]").html();
                    if(json.DBLCLICKFUNCTION && json.DBLCLICKFUNCTION!="undefined"){
                         $G('ISDBLCLICK').checked = true;
                         $('.isdblclick').css("display", "");
                         $G('txtDBLCLICKFUNCTION').value = json.DBLCLICKFUNCTION ;
                    }
                    //debugger;
                    if(json.TEXTCHECK && json.TEXTCHECK!="undefined"){
                        $G('isCHECK').checked = true;
                        $('.isCHECK').css("display", "");
                        $G('TEXTCHECK').value = json.TEXTCHECK ;
                    }
                    if(json.CHECKMSG && json.CHECKMSG!="undefined"){
                        $G('CHECKMSG').value = json.CHECKMSG ;
                    }
                    var arr = [undefined,"undefined",""];
                    if($.inArray($G('labelVALUE').value,arr) == -1){
                        $G('DESCRIB').checked = true;
                        $(".describ").css("display", "");
                    }else{
                        $G('DESCRIB').checked = false;
                        $(".describ").css("display", "none");
                    }
                    if (json.REQUIRED == 1) {
                        $G('txtREQUIRED').checked = true;
                    }
                    if (json.READONLY == 1) {
                        $G('txtREADONLY').checked = true;
                    }
                    if (json.ISDISPLAY == 1) {
                        $G('txtISDISPLAY').checked = true;
                    }
                    if (json.ISBRACKETS == 1) {
                        $G('ISBRACKETS').checked = true;
                    }
                    if (json.ISREDPOINT == 1) {
                        $G('ISREDPOINT').checked = true;
                    }
                    if (json.OPENRULE == 1) {
                        $G('OPENRULE').checked = true;
                        $('.openRule').css("display", "");
                    }
                   // console.log("txtCODE:"+$G('txtCODE').value);
                    $G('txtCODE').setAttribute('readonly', 'readonly');
                }
                $G('txtCODE').focus();
                
                $('#txtVERIFYTYPE').change(function(){
               		if( $('#txtVERIFYTYPE option:selected').val() == "textarea"){
               			$("#textarea-width").css("display","block");
               			$(".text-col").text("行");
               			$(".text-row").text("列");
               		}else{
               			$(".text-col").text("px");
               			$("#textarea-width").css("display","none");
               		}
                })
            };

            dialog.oncancel = function() {
                if (UE.plugins[thePlugins].editdom) {
                    delete UE.plugins[thePlugins].editdom;
                }
            };
            dialog.onok = function() {
                var cv = $G('txtCODE').value;
                if ($G('txtCODE').value == '') {
                    alert('请输入控件ID');
                    return false;
                }
                if (!oNode && checkKeyword(cv)) {
                    alert('控件编码不符合规范');
                    return false;
                }
                if ($G('txtNAME').value == '') {
                    alert('请输入控件名称');
                    return false;
                }

                var json = {
                	ID: $G('txtCODE').value,
                	CODE: $G('txtCODE').value,
                    TYPE: 'text',
                    NAME: $G('txtNAME').value,
                    TAG: $G('txtTAG').value,
                    DESCNAME: $G('txtDESCNAME').value,
                    VERIFYTYPE: $G('txtVERIFYTYPE').value,
                    VALUE: $G('txtVALUE').value,
                    LABEL: $G('labelVALUE').value,
                    REQUIRED: 0,
                    READONLY: 0,
                    RULE: $G('txtRuleList').value,
                    CONN_TEMPLATE_VER_ID: $G('selectTemplate').value,
                    CONNCODE: $G('selectCode').value,
                    TEXT_COLOR: $G('txtCOLOR').value,
                    TEXTLENGTH:$G('TEXTLENGTH').value,
                    TEXTCOLS: $G('TEXTCOLS').value,
                    TEXTCHECK:$G('TEXTCHECK').value,
                    CHECKMSG:$G('CHECKMSG').value,
                };
                if ($G('txtREQUIRED').checked) {
                    json.REQUIRED = 1;
                }
                if ($G('txtISDISPLAY').checked) {
                    json.ISDISPLAY = 1;
                }
                if ($G('ISBRACKETS').checked) {
                    json.ISBRACKETS = 1;
                }
                if ($G('txtREADONLY').checked) {
                    json.READONLY = 1;
                }
                if ($G('ISDBLCLICK').checked) {
                    json.DBLCLICKFUNCTION = $G('txtDBLCLICKFUNCTION').value;
                }
                if ($G('ISREDPOINT').checked) {
                    json.ISREDPOINT = 1;
                }
                if ($G('OPENRULE').checked) {
                    json.OPENRULE = 1;
                }
                /*2017-12-24 king 计算表达式 start*/
                var expshow = json.VALUE;
                if(parent.sde.isSDEExpStr(expshow)){
                    json.EXPSTR = json.VALUE;
                }
                /*2017-12-24 king 计算表达式 end*/
                var html = sdefun.makeHtmlByPluginJson(json);//根据老的plugin，生成html;

                if (!oNode) {
                    json.plugin_ex_json =[];
                    json.OPENRULE?json.plugin_ex_json.push({"field_code":"openrule","field_name":"是否打开规则","field_value":json.OPENRULE}):"";
                    if(json.TEXTCHECK){json.plugin_ex_json.push({"field_code":"textcheck","field_name":"控件值约束","field_value":json.TEXTCHECK}) ;}
                    if(json.CHECKMSG){json.plugin_ex_json.push({"field_code":"checkmsg","field_name":"控件提示","field_value":json.CHECKMSG}) ;}
                    if(json.LABEL){json.plugin_ex_json.push({"field_code":"label","field_name":"描述文字","field_value":json.LABEL}) ;}
                    if(json.ISREDPOINT){json.plugin_ex_json.push({"field_code":"isredpoint","field_name":"小红点","field_value":json.ISREDPOINT}) ;}
                    if(json.ISBRACKETS){json.plugin_ex_json.push({"field_code":"isbrackets","field_name":"隐藏括号","field_value":json.ISBRACKETS}) ;}
                    if(json.TEXTLENGTH){json.plugin_ex_json.push({"field_code":"textlength","field_name":"框长","field_value":json.TEXTLENGTH}) ;}
                    if(json.TEXTCOLS){json.plugin_ex_json.push({"field_code":"textcols","field_name":"框宽","field_value":json.TEXTCOLS}) ;}
                    if(json.CONNCODE){json.plugin_ex_json.push({"field_code":"conncode","field_name":"关联取数","field_value":json.CONNCODE});}
                    if(json.CONN_TEMPLATE_VER_ID){json.plugin_ex_json.push({"field_code":"conn_template_ver_id","field_name":"关联模板ID","field_value":json.CONN_TEMPLATE_VER_ID});}
                    if(json.DBLCLICKFUNCTION){ json.plugin_ex_json.push({ "field_code": "dblclickfunction","field_name": "双击事件","field_value": json.DBLCLICKFUNCTION});}
                    var oNodeHtml;
                    var plugin = sdefun.pluginFindByCode(json.CODE);//根据code 去查询控件库是否已经存在
                    if(plugin.length>0){
                        oNodeHtml = sdefun.pluginIsContinue(plugin[0]);//根据老的plugin，生成html;
                    }else{
                        plugin = sdefun.addPlugin(json);
                        plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id})[0];
                        oNodeHtml = sdefun.pluginToHtml(plugin);
                    }
                    return oNodeHtml ? editor.execCommand('insertHtml',oNodeHtml):false;
                } else {
                    json.VER_ID = $G('VER_ID').value||"";
                    json.PLUGINID = $G('PLUGINID').value||"";
                	//当前页面修改值，不保存到数据库
                	/*var plugin = sdefun.pluginFindByCode(json.CODE);
                	var pluginToJ ;
                	if(plugin.length < 1){
                		plugin = sdefun.addPlugin(json);
                		plugin = sdefun.pluginFindByVId({ver_id:plugin.ver_id});
	               	}else{
                		json.VER_ID = plugin[0].ver_id;
                		json.ID = plugin[0].id;
                		plugin = sdefun.updatePlugin(json).data;
                	}
                	pluginToJ = sdefun.pluginToJson(plugin);
                    oNode.setAttribute('title', pluginToJ.NAME);
                    oNode.setAttribute('id', pluginToJ.ID);
                    oNode.setAttribute('sde-model', JSON.stringify(pluginToJ));
                    oNode.innerHTML = html;
                    delete UE.plugins[thePlugins].editdom;*/
                    if(json.VER_ID)oNode.setAttribute('ver_id', json.VER_ID);
                    if(json.VERIFYTYPE)oNode.setAttribute('verifytype', json.VERIFYTYPE);
                    if(json.RULE)oNode.setAttribute('rule', json.RULE);
                    if(json.DBLCLICKFUNCTION)oNode.setAttribute('_dblclick', json.DBLCLICKFUNCTION||"");
                    oNode.setAttribute('title', json.NAME);
                    oNode.setAttribute('id', json.ID?json.ID:json.CODE);
                    oNode.setAttribute('sde-model', JSON.stringify(json));
                    //增加控件前边显示名称功能 Nothing 2018-01-12
                    var contentDisplay = $("input#DESCRIB").prop("checked");
                    if(contentDisplay){
                        if(typeof($(oNode).prev().attr("_name")) == "undefined"){
                            $(oNode).before("<span _name="+ json.ID +">" + json.LABEL + "</span>")
                        }else{
                            $(oNode).prev().html(json.LABEL);
                        }
                    }else{
                        $(oNode).prev("[_name]").remove();
                    }
                    oNode.innerHTML = html;
                    if(json.ISDISPLAY ==1){
                        if(typeof($(oNode).prev().attr("_name")) != "undefined"){
                            $(oNode).prev("[_name]").wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");
                        }
                        $(oNode).wrapAll("<span displayCode="+ json.CODE +" style='display: none;'></span>");
                    };
                    delete UE.plugins[thePlugins].editdom;
                }
            };
        })(UE);
       
    </script>
</body>

</html>